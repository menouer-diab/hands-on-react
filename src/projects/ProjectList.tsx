import { useState } from "react";
import { Project } from "./Project";
import ProjectCard from "./ProjectCard";
import ProjectForm from "./ProjectForm";

interface ProjectListProps {
  projects: Project[];
}

// Menouer Notice: notice the syntax for accessing the attribute "projects" of the type ProjectListProps

// Other correct variant

function ProjectList_1(projectListProps: ProjectListProps) {
  // function ProjectList(projects: ProjectListProps) {
  // return <pre>{JSON.stringify(projects, null, ' ')}</pre>

  return (
    <>
      {projectListProps.projects.map((proj) => (
        <pre>{JSON.stringify(proj, null, " ")}</pre>
      ))}
    </>
  );
}

function ProjectList({ projects }: ProjectListProps) {
  // function ProjectList(projects: ProjectListProps) {
  // return <pre>{JSON.stringify(projects, null, ' ')}</pre>

  /*     return (
        <>
          {projects.map((proj) => (
            <pre>{JSON.stringify(proj, null, " ")}</pre>
          ))}
        </>
      ); */

  /*   return (
    <div className="row">
      {projects.map((project) => (
        <div key={project.id} className="cols-sm">
            <div className="card">
              <img src={project.imageUrl} alt={project.name}></img>
              <section className="section dark">
                <h5 className="strong">
                  <strong>{project.name}</strong>
                </h5>
                <p>{project.description}</p>
                <p>Budget: {project.budget.toLocaleString()}</p>
              </section>
            </div>
        </div>
      ))}
  </div>); */

  // Replace with ProjectCard component

  // 23.March Note: Menouer
  // Lab 12
  // add state related to selected project
  const [projectToBeEdited, setProjectToBeEdited] = useState({}); // Menouer: State will be stored in projectToBeEdited. setProjectToBeEdited() is the function which changes state

  // 23.March Note: Menouer
  // Add event Handler for Button-Click
  // Lab 11: Communicating from Child to Parent Component
  const handleEdit = (project: Project) => {
    console.log(project);
    setProjectToBeEdited(project); // Menouer: setState()
  };

  // 23.March Note: Menouer
  // Lab 14: Introduce Cancel Button. The related project should be displayed again
  const cancelEdit = () => {
    setProjectToBeEdited({}); // when cancel then no selected project
  };

  // work with an array items
  // Menouer: you can call the attribute like you want.
  // Menouer: I think it will catch the onClick event generated by clicking on button in ProjectCard
  const items = projects.map((project) => (
    <div key={project.id} className="cols-sm">
      {project === projectToBeEdited ? (
        <ProjectForm onCancel={cancelEdit} />
      ) : (
        <ProjectCard project={project} onEdit={handleEdit}></ProjectCard>
      )}
    </div>
  ));

  return <div className="row">{items}</div>;
}

export default ProjectList;
